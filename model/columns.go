// generated by internal/cmd/gentokens/main.go

package model

type ColumnType int

const (
	ColumnTypeInvalid ColumnType = iota
	ColumnTypeBit
	ColumnTypeTinyInt
	ColumnTypeSmallInt
	ColumnTypeMediumInt
	ColumnTypeInt
	ColumnTypeInteger
	ColumnTypeBigInt
	ColumnTypeReal
	ColumnTypeDouble
	ColumnTypeFloat
	ColumnTypeDecimal
	ColumnTypeNumeric
	ColumnTypeDate
	ColumnTypeTime
	ColumnTypeTimestamp
	ColumnTypeDateTime
	ColumnTypeYear
	ColumnTypeChar
	ColumnTypeVarChar
	ColumnTypeBinary
	ColumnTypeVarBinary
	ColumnTypeTinyBlob
	ColumnTypeBlob
	ColumnTypeMediumBlob
	ColumnTypeLongBlob
	ColumnTypeTinyText
	ColumnTypeText
	ColumnTypeMediumText
	ColumnTypeLongText

	ColumnTypeMax
)

func (c ColumnType) String() string {
	switch c {
	case ColumnTypeBit:
		return "BIT"
	case ColumnTypeTinyInt:
		return "TINYINT"
	case ColumnTypeSmallInt:
		return "SMALLINT"
	case ColumnTypeMediumInt:
		return "MEDIUMINT"
	case ColumnTypeInt:
		return "INT"
	case ColumnTypeInteger:
		return "INTEGER"
	case ColumnTypeBigInt:
		return "BIGINT"
	case ColumnTypeReal:
		return "REAL"
	case ColumnTypeDouble:
		return "DOUBLE"
	case ColumnTypeFloat:
		return "FLOAT"
	case ColumnTypeDecimal:
		return "DECIMAL"
	case ColumnTypeNumeric:
		return "NUMERIC"
	case ColumnTypeDate:
		return "DATE"
	case ColumnTypeTime:
		return "TIME"
	case ColumnTypeTimestamp:
		return "TIMESTAMP"
	case ColumnTypeDateTime:
		return "DATETIME"
	case ColumnTypeYear:
		return "YEAR"
	case ColumnTypeChar:
		return "CHAR"
	case ColumnTypeVarChar:
		return "VARCHAR"
	case ColumnTypeBinary:
		return "BINARY"
	case ColumnTypeVarBinary:
		return "VARBINARY"
	case ColumnTypeTinyBlob:
		return "TINYBLOB"
	case ColumnTypeBlob:
		return "BLOB"
	case ColumnTypeMediumBlob:
		return "MEDIUMBLOB"
	case ColumnTypeLongBlob:
		return "LONGBLOB"
	case ColumnTypeTinyText:
		return "TINYTEXT"
	case ColumnTypeText:
		return "TEXT"
	case ColumnTypeMediumText:
		return "MEDIUMTEXT"
	case ColumnTypeLongText:
		return "LONGTEXT"
	default:
		return "(invalid)"
	}
}
